.text-name {
  text-transform: uppercase;
}

.text-work {
 color:#aaaaaa;
  font-size: 15px;
}


.wrapper {
  &.members {
    .main-block {
      .container {
        .our-members {
          &.slick-slider {
            margin-right: -30px;
          }
          .slick-prev {
            top: -20px;
            left: auto;
            right: 72px;
            &:before {
              content: '<';
              background: #dd5931;
              color: white;
              text-align: left;
              padding: 2px 10px 10px 10px;
            }
          }
          .slick-next {
            top: -20px;
            right: 41px;
            &:before {
              content: '>';
              background: #dd5931;
              color: white;
              text-align: left;
              padding: 2px 10px 10px 10px;
            }
          }
          .slick-list {
            .member-info {
              margin-right: 30px;
              .member-pic {
                img {
                  width: 100%;
                }
              }
              .all-info {
                margin-top: 20px;
                h2, h4 {
                  line-height: 20px;
                }
                h4 {
                  padding-bottom: 15px;
                }
              }
            }
          }
        }
      }
    }
  }
}

.projects {
  background: #f5f5f4;
  min-height: 300px;
  .container {
    .display-flex {
      min-height: 300px;
      padding-top: 40px;
      padding-bottom: 40px;
      .project-block {
        width: 300px;
        text-align: center;
        margin: auto;
        .text-anvio {
          margin-top: 20px;
          margin-bottom: 10px;
        }
      }
    }
  }
}

.case-study {
  min-height: 500px;
  .container {
    margin-top: 50px;
    .left-block {
      float:left;
    }
    .right-block {
      float:right;
      width: 50%;
      height: 630px;
      .right-info {
        width: 90%;
        float: right;
        top: 50%;
        transform: translateY(-50%);
        position: relative;
        .logo {
          display: block;
          height: 100px;
          img {
            height: 80px;
            position: relative;
            top: 50%;
            -webkit-transform: translateY(-50%);
            -moz-transform: translateY(-50%);
            -o-transform: translateY(-50%);
            transform: translateY(-50%);
          }
        }
        p {
          margin-top: 20px;
          font-size: 16px;
        }
        .right-header {
          font-family: 'Lato', sans-serif;
         font-size: 50px;
         position: relative;
         margin-bottom: 20px;
         &:before {
           content: '';
           position: absolute;
           width: 140px;
           height: 6px;
           background: #dd5931;
           bottom: 0;
         }
       }
      }
    }
  }
}


.pie {
  display: inline-block;
  position: relative;
  width: 1em;
  height: 1em;
  background-color: #44a5db;
  font-size: 12em;
  text-align: center;
   border-radius:(50%);
}

.percent {
  position: absolute;
  z-index: 20;
  top: 7px;
  right: 7px;
  bottom: 7px;
  left: 7px;
  background: #f5f5f4;
   border-radius:(50%);
}
.number {
  position: absolute;
  z-index: 30;
  width: 100%;
  height: 100%;
  padding-top: 50%;
  line-height: 0;
  font-size: 35px;
  font-weight: 700;
  color: #cccccc;
}


$configs: (
        chart-two: (
                svgSize: 175px,
                percentage: 100,
                strokeWidth: 8px,
                backgroundColor: #cccccc,
                foregroundColor: #44a5db,
                labelColor: #cccccc,
                labelFontSize: 2.5rem,
                duration: 3s,
                animationDelay: 1s
        )
);


/* ------- DO NOT EDIT BELOW --------- */
$pi: 3.14;
$labelData: '';
@for $i from 0 to 101 {
  $labelData: $labelData + $i + '%' + '\a';
}

@each $chart, $param in $configs {

  $c: (map-get($param, svgSize) - map-get($param, strokeWidth)) * $pi;
  $cOffSet: (map-get($param, percentage)/100)*$c;

  .#{$chart} {
    width: map-get($param, svgSize);
    height: map-get($param, svgSize);
    margin: 0 auto;
    position: relative;

    &.animate {
      svg .circle-foreground {
        animation: offset map-get($param, duration) ease-in-out forwards;
        animation-delay: map-get($param, animationDelay);
      }
      figcaption:after {
        animation: #{$chart}-label map-get($param, duration) steps(map-get($param, percentage)) forwards;
        animation-delay: map-get($param, animationDelay);
      }
    }

    svg {
      width: 100%;
      height: 100%;
      .circle-background {
        r: (map-get($param, svgSize) - map-get($param, strokeWidth))/2;
        cx: 50%;
        cy: 50%;
        fill: none;
        stroke: map-get($param, backgroundColor);
        stroke-width: map-get($param, strokeWidth);
      }
      .circle-foreground {
        @extend .circle-background;
        stroke: map-get($param, foregroundColor);
        stroke-dasharray: $cOffSet $c;
        stroke-dashoffset: $cOffSet;
        stroke-linecap: round;
        transform-origin: 50% 50%;
        transform: rotate(-90deg);
      }
    }
    figcaption {
      display: inline-block;
      width: 100%;
      height: map-get($param, labelFontSize);
      overflow: hidden;
      text-align: center;
      color: map-get($param, labelColor);
      position: absolute;
      top: calc(50% - #{map-get($param, labelFontSize)/2});
      left: 0;
      font-size: 0;
      &:after {
        display: inline-block;
        content: $labelData;
        white-space: pre;
        font-size: map-get($param, labelFontSize);
        line-height: map-get($param, labelFontSize);
      }
    }
  }
  @keyframes #{$chart}-label {
    100% {
      transform: translateY(map-get($param, labelFontSize) * (-(map-get($param, percentage))));
    }
  }
}
@keyframes offset {
  100% {
    stroke-dashoffset: 0;
  }
}
